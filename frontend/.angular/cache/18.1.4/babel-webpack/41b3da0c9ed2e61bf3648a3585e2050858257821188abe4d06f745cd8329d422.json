{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-apexcharts\";\nimport * as i4 from \"../loading-search/loading-search.component\";\nconst _c0 = [\"chart\"];\nfunction ChartPieComponent_apx_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"apx-chart\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"series\", ctx_r0.chartOptions.series)(\"chart\", ctx_r0.chartOptions.chart)(\"labels\", ctx_r0.chartOptions.labels)(\"fill\", ctx_r0.chartOptions.fill)(\"stroke\", ctx_r0.chartOptions.stroke)(\"responsive\", ctx_r0.chartOptions.responsive);\n  }\n}\nfunction ChartPieComponent_app_loading_search_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-search\", 4);\n  }\n}\nexport let ChartPieComponent = /*#__PURE__*/(() => {\n  class ChartPieComponent {\n    constructor(http) {\n      this.http = http;\n      this.canViewChart = false;\n      this.array_so_names = [];\n      this.array_so_quantity = [];\n      this.chartOptions = {\n        series: [],\n        chart: {\n          type: 'polarArea'\n        },\n        stroke: {\n          colors: ['#fff']\n        },\n        fill: {\n          opacity: 0.8\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {},\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }],\n        labels: [],\n        legend: {\n          labels: {\n            colors: '#3083DC'\n          }\n        },\n        theme: {\n          mode: 'dark'\n        }\n      };\n    }\n    ngOnInit() {\n      this.http.get('/home/get-info-SO', {}).pipe(tap(data => {\n        this.processData(data);\n        this.setupChart();\n      }), catchError(error => {\n        this.status = error.status;\n        this.canViewChart = false;\n        return throwError(error);\n      })).subscribe(() => {\n        this.canViewChart = true;\n      });\n    }\n    processData(data) {\n      this.array_so_names = data.map(item => item.system_name);\n      this.array_so_quantity = data.map(item => item.count);\n    }\n    setupChart() {\n      this.chartOptions = {\n        series: this.array_so_quantity,\n        chart: {\n          type: 'polarArea'\n        },\n        stroke: {\n          colors: ['#fff']\n        },\n        fill: {\n          opacity: 0.8\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {},\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }],\n        labels: this.array_so_names,\n        legend: {\n          labels: {\n            colors: '#3083DC'\n          }\n        },\n        theme: {\n          mode: 'dark'\n        }\n      };\n    }\n    static #_ = this.ɵfac = function ChartPieComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartPieComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = i0.ɵɵdefineComponent({\n      type: ChartPieComponent,\n      selectors: [[\"app-chart-pie\"]],\n      viewQuery: function ChartPieComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n        }\n      },\n      decls: 3,\n      vars: 2,\n      consts: [[\"id\", \"chart\", 1, \"position-relative\"], [\"class\", \"d-block chart\", 3, \"series\", \"chart\", \"labels\", \"fill\", \"stroke\", \"responsive\", 4, \"ngIf\"], [\"class\", \"position-absolute top-50 start-50 translate-middle\", 4, \"ngIf\"], [1, \"d-block\", \"chart\", 3, \"series\", \"chart\", \"labels\", \"fill\", \"stroke\", \"responsive\"], [1, \"position-absolute\", \"top-50\", \"start-50\", \"translate-middle\"]],\n      template: function ChartPieComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ChartPieComponent_apx_chart_1_Template, 1, 6, \"apx-chart\", 1)(2, ChartPieComponent_app_loading_search_2_Template, 1, 0, \"app-loading-search\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.canViewChart);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.canViewChart);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ChartComponent, i4.LoadingSearchComponent],\n      styles: [\"#chart[_ngcontent-%COMP%]{max-width:380px;margin:35px auto;padding:0}.chart[_ngcontent-%COMP%]{width:35em;height:auto;display:block}[_nghost-%COMP%]     .apexcharts-datalabels text{fill:#fee440!important}.apexcharts-datalabels[_ngcontent-%COMP%]   text[_ngcontent-%COMP%]{fill:#fee440!important;font-size:14px;font-weight:700}.apexcharts-legend-text[_ngcontent-%COMP%]{fill:#fee440!important;font-size:14px;font-weight:700}\"]\n    });\n  }\n  return ChartPieComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}