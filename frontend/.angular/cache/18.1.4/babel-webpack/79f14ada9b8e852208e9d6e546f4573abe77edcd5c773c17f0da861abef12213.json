{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-apexcharts\";\nimport * as i4 from \"../loading-search/loading-search.component\";\nconst _c0 = [\"chart\"];\nfunction ChartSplineLineComponent_apx_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"apx-chart\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"series\", ctx_r0.chartOptions.series)(\"chart\", ctx_r0.chartOptions.chart)(\"xaxis\", ctx_r0.chartOptions.xaxis)(\"dataLabels\", ctx_r0.chartOptions.dataLabels)(\"grid\", ctx_r0.chartOptions.grid)(\"stroke\", ctx_r0.chartOptions.stroke)(\"title\", ctx_r0.chartOptions.title);\n  }\n}\nfunction ChartSplineLineComponent_app_loading_search_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-search\", 4);\n  }\n}\nexport let ChartSplineLineComponent = /*#__PURE__*/(() => {\n  class ChartSplineLineComponent {\n    constructor(http) {\n      this.http = http;\n      this.dates = [];\n      this.quantity = [];\n      this.canViewChart = false;\n      this.chartOptions = {\n        series: [{\n          name: '',\n          data: []\n        }],\n        chart: {\n          height: 350,\n          type: 'line',\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          enabledOnSeries: [0],\n          textAnchor: 'start',\n          distributed: true\n        },\n        stroke: {\n          curve: 'stepline'\n        },\n        title: {\n          text: '',\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: []\n        }\n      };\n    }\n    ngOnInit() {\n      this.http.get('/home/get-info-last-update', {\n        headers: new HttpHeaders({\n          Accept: 'application/json'\n        })\n      }).pipe(tap(data => {\n        this.processData(data);\n        this.setupChart();\n      }), catchError(error => {\n        return throwError(error);\n      })).subscribe(() => {\n        this.canViewChart = true;\n      });\n    }\n    processData(data) {\n      this.dates = data.map(item => item.date);\n      this.quantity = data.map(item => item.count);\n    }\n    setupChart() {\n      this.chartOptions = {\n        series: [{\n          name: 'Desktops',\n          data: this.quantity,\n          type: 'line'\n        }],\n        chart: {\n          height: 350,\n          type: 'line',\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false,\n          enabledOnSeries: [0],\n          textAnchor: 'start',\n          distributed: true\n        },\n        stroke: {\n          curve: 'stepline'\n        },\n        title: {\n          text: 'Entradas de computadores',\n          align: 'left',\n          style: {\n            color: '#FFFFFF',\n            fontWeight: 'bold'\n          }\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'],\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: this.dates,\n          labels: {\n            style: {\n              colors: '#FFFF00'\n            }\n          }\n        }\n      };\n    }\n    static #_ = this.ɵfac = function ChartSplineLineComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartSplineLineComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = i0.ɵɵdefineComponent({\n      type: ChartSplineLineComponent,\n      selectors: [[\"app-chart-spline-line\"]],\n      viewQuery: function ChartSplineLineComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n        }\n      },\n      decls: 3,\n      vars: 2,\n      consts: [[\"id\", \"chart\"], [3, \"series\", \"chart\", \"xaxis\", \"dataLabels\", \"grid\", \"stroke\", \"title\", 4, \"ngIf\"], [\"class\", \"position-absolute top-50 start-50 translate-middle\", 4, \"ngIf\"], [3, \"series\", \"chart\", \"xaxis\", \"dataLabels\", \"grid\", \"stroke\", \"title\"], [1, \"position-absolute\", \"top-50\", \"start-50\", \"translate-middle\"]],\n      template: function ChartSplineLineComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ChartSplineLineComponent_apx_chart_1_Template, 1, 7, \"apx-chart\", 1)(2, ChartSplineLineComponent_app_loading_search_2_Template, 1, 0, \"app-loading-search\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.canViewChart);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.canViewChart);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ChartComponent, i4.LoadingSearchComponent],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css?family=Roboto\\\";body[_ngcontent-%COMP%]{font-family:Roboto,sans-serif}#chart[_ngcontent-%COMP%]{max-width:650px;margin:35px auto}\"]\n    });\n  }\n  return ChartSplineLineComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}